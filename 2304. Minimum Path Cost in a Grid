class Solution {
public:
    int minPathCost(vector<vector<int>>& grid, vector<vector<int>>& moveCost) {
        int m = grid.size(), n = grid[0].size();
        for (int i = 0; i < m - 1; i++) {
            vector<int> temp(n, INT_MAX);
            for (int j = 0; j < n; j++) {
                int num = grid[i][j];
                for (int k = 0; k < n; k++) {
                    temp[k] = min(temp[k], grid[0][j] + moveCost[num][k] + grid[i + 1][k]);
                }
            }
            grid[0] = temp;
        }
        return *min_element(grid[0].begin(), grid[0].end());
    }
};
// 200ms 84.15MB