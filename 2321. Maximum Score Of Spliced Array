class Solution {
public:
    int maximumsSplicedArray(vector<int>& nums1, vector<int>& nums2) {
        int n = nums1.size(), sum1 = 0, sum2 = 0;
        int m = 0, M = 0;   // m : min -> -   , M : max -> +
        int temp0 = 0, temp1 = 0;
        for (int i = 0; i < n; i++) {
            sum1 += nums1[i];
            sum2 += nums2[i];

            int t = nums2[i] - nums1[i];
            
            temp0 = min(temp0, 0) + t;
            m = min(m, temp0);
            temp1 = max(temp1, 0) + t;
            M = max(M, temp1);
        }
        cout<<M<<" "<<m<<endl;
        return max(sum1 + M, sum2 - m);
    }
};
// 77ms 85.30MB