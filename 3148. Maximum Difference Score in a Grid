class Solution {
public:
    int maxScore(vector<vector<int>>& grid) {
        int l=grid.size();
        int k=grid[0].size();
        int m=INT_MIN;
        for(int i=0;i<l;i++)
        {
            for(int j=0;j<k;j++)
            {
                if(i==0)
                {
                    if(j==0)
                    continue;
                    else
                    {
                        m=max(m,grid[i][j]-grid[i][j-1]);
                        grid[i][j]=min(grid[i][j-1],grid[i][j]);
                    }
                }
                else if(j==0)
                {
                    m=max(m,grid[i][j]-grid[i-1][j]);
                    grid[i][j]=min(grid[i-1][j],grid[i][j]);
                }
                else
                {
                    m=max(m,grid[i][j]-min(grid[i-1][j],grid[i][j-1]));
                    grid[i][j]=min(grid[i][j],min(grid[i-1][j],grid[i][j-1]));
                }
            }
        }
        return m;
    }
};
// 127ms 57.23MB