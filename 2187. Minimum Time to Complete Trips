class Solution {
public:
    long long minimumTime(vector<int>& time, int totalTrips) {
        int n = time.size();
        long long l = 0, r = LONG_MAX;
        // long long r = (long long)*min_element(time.begin(), time.end()) * totalTrips;
        
        while (l + 1 < r) {
            long long ans = 0;
            long long mid = l + (r - l) / 2;
            for (auto i : time) {
                ans += mid / i;
                if (ans >= totalTrips)
                    break;
            }
            if (ans >= totalTrips) {
                r = mid;
            } else {
                l = mid;
            }
        }
        return r;
    }
};
// 147ms 97.23MB