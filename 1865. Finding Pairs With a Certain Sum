class FindSumPairs {
    vector<int> nums1;
    vector<int> nums2;
    unordered_map<int, int> cnt;
public:
    FindSumPairs(vector<int>& nums1, vector<int>& nums2) : nums1(nums1), nums2(nums2) { 
        this -> nums1 = nums1;
        this -> nums2 = nums2;
        for (int& x : nums2) cnt[x]++;
    }
    
    void add(int index, int val) {
        cnt[nums2[index]]--;
        nums2[index] += val;
        cnt[nums2[index]]++;
    }
    
    int count(int tot) {
        int ans = 0;
        for (int& i : nums1) ans += cnt.contains(tot - i) ? cnt[tot - i] : 0;
        return ans;
    }
};

/**
 * Your FindSumPairs object will be instantiated and called as such:
 * FindSumPairs* obj = new FindSumPairs(nums1, nums2);
 * obj->add(index,val);
 * int param_2 = obj->count(tot);
 */
 // 84ms 80.25MB