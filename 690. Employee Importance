/*
// Definition for Employee.
class Employee {
public:
    int id;
    int importance;
    vector<int> subordinates;
};
*/

class Solution {
public:
    int getImportance(vector<Employee*> employees, int id) {
        unordered_map<int, Employee*> m;
        for(auto it : employees) {
            m[it -> id] = it;
        }
        auto dfs = [&] (auto& dfs, int id) -> int {
            auto it = m[id];
            int res = it -> importance;
            for(int nid : it -> subordinates) {
                res += dfs(dfs, nid);
            }
            return res;
        };
        return dfs(dfs, id);
    }
};
// 23ms 20.13MB