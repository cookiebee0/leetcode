class Solution {
public:
    long long maxPoints(vector<vector<int>>& points) {
        int m = points.size(), n = points[0].size();
        vector<long long> dp(points[0].begin(), points[0].end());

        for (int i = 1; i < m; i++) {
            vector<long long> temp = dp;
            long long maxL = LONG_MIN, maxR = LONG_MIN;
            for (int j = 0; j < n; j++) {
                maxL = max(maxL, temp[j] + j);
                dp[j] = max(dp[j], points[i][j] + maxL - j);
            }
            for (int j = n - 1; j >= 0; j--) {
                maxR = max(maxR, temp[j] - j);
                dp[j] = max(dp[j], points[i][j] + maxR + j);
            }
        }
        return *max_element(dp.begin(), dp.end());
    }
};
// 188ms 100.69MB