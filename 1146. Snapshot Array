class SnapshotArray {
public:
    int t = 0;
    unordered_map<int, vector<pair<int, int>>> m;
    //           index          snap_id val
    SnapshotArray(int length) {}

    void set(int index, int val) { m[index].push_back({t, val}); }

    int snap() { return t++; }

    int get(int index, int snap_id) {
        auto& it = m[index];
        int l = -1, r = it.size();
        while (l + 1 < r) {
            int mid = l + (r - l) / 2;
            if (it[mid].first <= snap_id)
                l = mid;
            else
                r = mid;
        }
        return (l == -1) ? 0 : it[l].second;
    }
};

/**
 * Your SnapshotArray object will be instantiated and called as such:
 * SnapshotArray* obj = new SnapshotArray(length);
 * obj->set(index,val);
 * int param_2 = obj->snap();
 * int param_3 = obj->get(index,snap_id);
 */
// 324ms 173.02MB