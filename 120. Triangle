class Solution {
public:
    int minimumTotal(vector<vector<int>>& triangle) {
        int n = triangle.size();
        // for (int i = 1; i < n; i++) {
        //     for (int j = 0; j < triangle[i].size(); j++) {
        //         int temp1, temp2;
        //         if (j - 1 < 0) temp1 = 1001;
        //         else
        //         temp1 = triangle[i - 1][j - 1];
        //         if (j >= i)
        //         temp2 = 1001;
        //         else
        //         temp2 = triangle[i - 1][j];
        //         triangle[i][j] += min(temp1, temp2);
        //     }
        // }
        // return *min_element(triangle[n - 1].begin(), triangle[n - 1].end());
        for (int i = n - 2; i >= 0; i--) {
            for (int j = 0; j <= i; j++) {
                triangle[i][j] += min(triangle[i + 1][j], triangle[i + 1][j + 1]);
            }
        }
        return triangle[0][0];
    }
};
// 0ms 11.08MB